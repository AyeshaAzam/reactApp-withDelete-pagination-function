[{"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\index.js":"1","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\App.js":"2","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\reportWebVitals.js":"3","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Table.js":"4","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\StatusBadgeIcon.js":"5","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Modal.js":"6","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Pagination.js":"7"},{"size":500,"mtime":1606241322532,"results":"8","hashOfConfig":"9"},{"size":2790,"mtime":1607982349430,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606241322532,"results":"11","hashOfConfig":"9"},{"size":5382,"mtime":1607982393045,"results":"12","hashOfConfig":"9"},{"size":2076,"mtime":1607372503173,"results":"13","hashOfConfig":"9"},{"size":1943,"mtime":1607975704472,"results":"14","hashOfConfig":"9"},{"size":916,"mtime":1607784980305,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3d5mm4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\index.js",[],["33","34"],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\App.js",[],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\reportWebVitals.js",[],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Table.js",["35","36"],"import React, { useEffect, useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport StatusBadgeIcon from \"./StatusBadgeIcon\";\r\nimport Modal from \"./Modal\";\r\nimport \"./Table.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 650,\r\n    // tableLayout: \"auto\",\r\n    // margin: \" 0 auto\",\r\n  },\r\n});\r\n\r\nfunction TableData({ countries, onDelete, isLoading, id }) {\r\n  const classes = useStyles();\r\n  const [openCountryModal, setOpenCountryModal] = useState(false);\r\n\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const openModal = () => {\r\n    console.log(\"I have been clicked....\");\r\n    setOpenCountryModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    console.log(\"closing Modal\");\r\n    setOpenCountryModal(false);\r\n  };\r\n\r\n  const getModal = (country) => {\r\n    openModal();\r\n    setOpenCountryModal(country);\r\n  };\r\n\r\n  // for tabbing not using the keyboard keys\r\n  const myFocusIn = (event) => {\r\n    event.preventDefault();\r\n    // const currentTarget = event.currentTarget as HTMLElement;\r\n    const currentTarget = event.currentTarget;\r\n    currentTarget.classList.add(\"table__tableBody--has-focus\");\r\n  };\r\n\r\n  const myFocusOut = (event) => {\r\n    event.preventDefault();\r\n    const currentTarget = event.currentTarget;\r\n    currentTarget.classList.remove(\"table__tableBody--has-focus\");\r\n  };\r\n\r\n  // const onKeyPress = (event) => {\r\n  //   //Invoke callback on enter key\r\n  //   //KeyCodes.Enter = 13\r\n  //   if (event.charCode === 13) {\r\n  //     // do something\r\n  //     props.clickCallback && props.clickCallback(event);\r\n  //   }\r\n  // };\r\n\r\n  //const onClick = (event) => {};\r\n\r\n  return (\r\n    <div className=\"mytable\">\r\n      <div className=\"table__centered\">\r\n        {/* // this opens the Modal and also sending props to close it */}\r\n        {openCountryModal && (\r\n          <Modal closeModal={closeModal} currentCountry={openCountryModal} />\r\n        )}\r\n        <TableContainer className=\"table__container\">\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"simple table\"\r\n            style={{ width: \"auto\", tableLayout: \"auto\", margin: \" 0 auto\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow style={{ width: 100 }}>\r\n                <TableCell align=\"right\"></TableCell>\r\n                <TableCell variant=\"head\">\r\n                  <strong>Flag</strong>\r\n                </TableCell>\r\n                <TableCell variant=\"head\">\r\n                  <strong>Country</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>Cases</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>Deaths</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {countries.map((country, index) => (\r\n                <TableRow\r\n                  key={index}\r\n                  style={{ width: 100 }}\r\n                  className=\"table__tableBody\"\r\n                  onFocus={myFocusIn}\r\n                  onBlur={myFocusOut}\r\n                >\r\n                  <TableCell align=\"right\" onClick={() => getModal(country)}>\r\n                    {/* //  or i can do direct inside the tablecell : onClick={() => setOpen(true)} */}\r\n                    <StatusBadgeIcon />\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" className=\"table__countryFlag\">\r\n                    {\r\n                      <img\r\n                        src={country.countryInfo.flag}\r\n                        alt=\"logo\"\r\n                        width=\"48\"\r\n                      />\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className=\"table__country\"\r\n                  >\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href=\"https://disease.sh/\"\r\n                      className=\"table__text-link\"\r\n                    >\r\n                      <span>{country.country}</span>\r\n                    </a>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{country.cases}</TableCell>\r\n                  <TableCell align=\"right\">{country.deaths}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <button className=\"table__delete-the-row\">\r\n                      <DeleteIcon onClick={() => onDelete(country)} />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableData;\r\n\r\n// confirm if they want to delete the row: https://roytuts.com/delete-multiple-table-rows-from-server-using-react/\r\n//https://codepen.io/austinlyons/pen/vyojXo\r\n","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\StatusBadgeIcon.js",["37","38","39","40","41"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./StatusBadge.css\";\r\n\r\n// type IStatusType = 'done' | 'process' | 'new';\r\n\r\nconst IStatusType = {\r\n  statusDone: \"done\",\r\n  statusProcess: \"process\",\r\n  statusNew: \"new\",\r\n};\r\n\r\nfunction StatusBadgeIcon({ status, bagdeText }) {\r\n  const badgeText = \"\";\r\n\r\n  const switchStatus = (incomingStatus) => {\r\n    switch (incomingStatus) {\r\n      case \"IStatusType.statusDone\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-primary\">\r\n              <span class=\"badge\">Process</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case \"IStatusType.statusProcess\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-success\">\r\n              <span class=\"badge\">Done</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case \"IStatusType.statusNew\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-danger\">\r\n              <span class=\"badge\">New</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"statusBadge\">\r\n      <button type=\"button\" className=\"btn btn-danger\">\r\n        <span className=\"badge\">New</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusBadgeIcon;\r\n\r\n// about creating Badge : https://www.youtube.com/watch?v=Nd811gNlVMM\r\n// npm install react-bootstrap bootstrap\r\n// about switch case : https://www.robinwieruch.de/conditional-rendering-react\r\n\r\n{\r\n  /* <div className=\"statusBadge\">\r\n      <button type=\"button\" class=\"btn btn-primary\">\r\n        <span class=\"badge\">Process</span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-success\">\r\n        <span class=\"badge\">Done</span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\">\r\n        <span class=\"badge\">New</span>\r\n      </button>\r\n    </div> */\r\n}\r\n","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Modal.js",[],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Pagination.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":129,"column":23,"nodeType":"52","endLine":129,"endColumn":38},{"ruleId":"46","severity":1,"message":"53","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"54","line":7,"column":7,"nodeType":"48","messageId":"49","endLine":7,"endColumn":18},{"ruleId":"46","severity":1,"message":"55","line":14,"column":9,"nodeType":"48","messageId":"49","endLine":14,"endColumn":18},{"ruleId":"46","severity":1,"message":"56","line":16,"column":9,"nodeType":"48","messageId":"49","endLine":16,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":65,"column":1,"nodeType":"59","messageId":"60","endLine":77,"endColumn":2},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useState' is defined but never used.","'IStatusType' is assigned a value but never used.","'badgeText' is assigned a value but never used.","'switchStatus' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]