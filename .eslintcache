[{"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\index.js":"1","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\App.js":"2","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\reportWebVitals.js":"3","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Table.js":"4","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\StatusBadgeIcon.js":"5","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Modal.js":"6","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Pagination.js":"7"},{"size":500,"mtime":1606241322532,"results":"8","hashOfConfig":"9"},{"size":3057,"mtime":1607855380354,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606241322532,"results":"11","hashOfConfig":"9"},{"size":3342,"mtime":1607887854249,"results":"12","hashOfConfig":"9"},{"size":2076,"mtime":1607372503173,"results":"13","hashOfConfig":"9"},{"size":1981,"mtime":1607887116573,"results":"14","hashOfConfig":"9"},{"size":916,"mtime":1607784980305,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3d5mm4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\index.js",[],["34","35"],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\App.js",[],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\reportWebVitals.js",[],"C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Table.js",["36"],"import React, { useEffect, useState } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport StatusBadgeIcon from \"./StatusBadgeIcon\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 650,\r\n    // tableLayout: \"auto\",\r\n    // margin: \" 0 auto\",\r\n  },\r\n});\r\n\r\nfunction TableData({ countries, onDelete, isLoading, id }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  const openModal = () => {\r\n    console.log(\"I have been clicked....\");\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    console.log(\"closing Modal\");\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mytable\">\r\n      <div className=\"table__centered\">\r\n        {/* // this opens the Modal and also sending props to close it */}\r\n        {open && (\r\n          <Modal closeModal={closeModal} countriesCurrentInfo={countries} />\r\n        )}\r\n        <TableContainer className=\"table__container\">\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"simple table\"\r\n            style={{ width: \"auto\", tableLayout: \"auto\", margin: \" 0 auto\" }}\r\n          >\r\n            <TableHead>\r\n              <TableRow style={{ width: 100 }}>\r\n                <TableCell align=\"right\"></TableCell>\r\n                <TableCell variant=\"head\">\r\n                  <strong>Name</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>Cases</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>Deaths</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {countries.map((country, index) => (\r\n                <TableRow key={index} style={{ width: 100 }}>\r\n                  <TableCell align=\"right\" onClick={openModal}>\r\n                    {/* //  or i can do direct inside the tablecell : onClick={() => setOpen(true)} */}\r\n                    <StatusBadgeIcon />\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {country.country}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{country.cases}</TableCell>\r\n                  <TableCell align=\"right\">{country.deaths}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <DeleteIcon onClick={() => onDelete(country)} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableData;\r\n\r\n// confirm if they want to delete the row: https://roytuts.com/delete-multiple-table-rows-from-server-using-react/\r\n//https://codepen.io/austinlyons/pen/vyojXo\r\n","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\StatusBadgeIcon.js",["37","38","39","40","41"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./StatusBadge.css\";\r\n\r\n// type IStatusType = 'done' | 'process' | 'new';\r\n\r\nconst IStatusType = {\r\n  statusDone: \"done\",\r\n  statusProcess: \"process\",\r\n  statusNew: \"new\",\r\n};\r\n\r\nfunction StatusBadgeIcon({ status, bagdeText }) {\r\n  const badgeText = \"\";\r\n\r\n  const switchStatus = (incomingStatus) => {\r\n    switch (incomingStatus) {\r\n      case \"IStatusType.statusDone\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-primary\">\r\n              <span class=\"badge\">Process</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case \"IStatusType.statusProcess\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-success\">\r\n              <span class=\"badge\">Done</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case \"IStatusType.statusNew\":\r\n        return (\r\n          <div className=\"statusBadge\">\r\n            <button type=\"button\" class=\"btn btn-danger\">\r\n              <span class=\"badge\">New</span>\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"statusBadge\">\r\n      <button type=\"button\" className=\"btn btn-danger\">\r\n        <span className=\"badge\">New</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusBadgeIcon;\r\n\r\n// about creating Badge : https://www.youtube.com/watch?v=Nd811gNlVMM\r\n// npm install react-bootstrap bootstrap\r\n// about switch case : https://www.robinwieruch.de/conditional-rendering-react\r\n\r\n{\r\n  /* <div className=\"statusBadge\">\r\n      <button type=\"button\" class=\"btn btn-primary\">\r\n        <span class=\"badge\">Process</span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-success\">\r\n        <span class=\"badge\">Done</span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\">\r\n        <span class=\"badge\">New</span>\r\n      </button>\r\n    </div> */\r\n}\r\n","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Modal.js",["42"],"import React, { useState } from \"react\";\r\n//import Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"375px\",\r\n    maxWidth: \"375px\",\r\n    height: \"272px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderColor: \"#D5D9D9\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius: \"8px\",\r\n    zIndex: \"100\",\r\n  },\r\n}));\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst Modal = ({ closeModal, countriesCurrentInfo }) => {\r\n  // const [open, setOpen] = useState(true);\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  console.log(\" from Modal >>>> \", countriesCurrentInfo);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.paper} style={modalStyle}>\r\n        <div className=\"header__modal-container\">\r\n          <header className=\"header__modal\">\r\n            <h4>Current Information</h4>\r\n          </header>\r\n          {countriesCurrentInfo.map((currentInfo, key) => (\r\n            <div key={key}>\r\n              <p className=\"header__modalText\">\r\n                Corona-Cases for Today: {currentInfo.todayCases}\r\n              </p>\r\n              <p className=\"header__modalText\">\r\n                Today Recovery : {currentInfo.todayRecovered}\r\n              </p>\r\n              <p className=\"header__modalText\">\r\n                Total deaths today: {currentInfo.todayDeaths}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          {/* <button onClose={(e) => setOpen(false)}>Close</button> */}\r\n          <button onClick={closeModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Dev\\Clever-Programmer\\All-Clones\\Deleting_row_project\\todo-module-work-example\\src\\Pagination.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":7,"column":7,"nodeType":"49","messageId":"50","endLine":7,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":14,"column":9,"nodeType":"49","messageId":"50","endLine":14,"endColumn":18},{"ruleId":"47","severity":1,"message":"54","line":16,"column":9,"nodeType":"49","messageId":"50","endLine":16,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":65,"column":1,"nodeType":"57","messageId":"58","endLine":77,"endColumn":2},{"ruleId":"59","severity":2,"message":"60","line":47,"column":23,"nodeType":"49","messageId":"61","endLine":47,"endColumn":25},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'IStatusType' is assigned a value but never used.","'badgeText' is assigned a value but never used.","'switchStatus' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-undef","'ke' is not defined.","undef","no-global-assign","no-unsafe-negation"]